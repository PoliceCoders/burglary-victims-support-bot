<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Choice_AddDamagedProperty" xml:space="preserve">
    <value>I'm ready to tell you what was damaged.</value>
  </data>
  <data name="Choice_AddForensicOpportunities" xml:space="preserve">
    <value>I'm ready to look for forensic opportunities.</value>
  </data>
  <data name="Choice_AddInvolved" xml:space="preserve">
    <value>There are a few more people involved in this.</value>
  </data>
  <data name="Choice_AddLocation" xml:space="preserve">
    <value>I'm ready with the address.</value>
  </data>
  <data name="Choice_AddStolenProperty" xml:space="preserve">
    <value>I'm ready to record the stolen property.</value>
  </data>
  <data name="Choice_AddSuspects" xml:space="preserve">
    <value>I have some information about the suspects.</value>
  </data>
  <data name="Choice_AddVictims" xml:space="preserve">
    <value>I've got details of the victims ready.</value>
  </data>
  <data name="Choice_AddWitnesses" xml:space="preserve">
    <value>I've got some potential witnesses.</value>
  </data>
  <data name="Choice_CloseReport" xml:space="preserve">
    <value>I'd like to close this report for now.</value>
  </data>
  <data name="Choice_ReviewAllOptions" xml:space="preserve">
    <value>I'd like to see all my options for this report.</value>
  </data>
  <data name="Complete_AddDamagedProperty" xml:space="preserve">
    <value>We've recorded everything there is to add about damage to property.</value>
  </data>
  <data name="Complete_AddForensicOpportunities" xml:space="preserve">
    <value>That's all the forensic opportunities there are.</value>
  </data>
  <data name="Complete_AddInvolved" xml:space="preserve">
    <value>Nobody else was involved - that's everybody.</value>
  </data>
  <data name="Complete_AddLocation" xml:space="preserve">
    <value>The location looks ok to me.</value>
  </data>
  <data name="Complete_AddStolenProperty" xml:space="preserve">
    <value>That's everything that was stolen.</value>
  </data>
  <data name="Complete_AddSuspects" xml:space="preserve">
    <value>That's everything I know about the suspects.</value>
  </data>
  <data name="Complete_AddVictims" xml:space="preserve">
    <value>That's all the victims.</value>
  </data>
  <data name="Complete_AddWitnesses" xml:space="preserve">
    <value>Those are all the people who might have witnessed it.</value>
  </data>
  <data name="Negative_AddDamagedProperty" xml:space="preserve">
    <value>Nothing was damaged.</value>
  </data>
  <data name="Negative_AddForensicOpportunities" xml:space="preserve">
    <value>I'm pretty sure there aren't any forensic opportunities.</value>
  </data>
  <data name="Negative_AddInvolved" xml:space="preserve">
    <value>Nobody else was involved.</value>
  </data>
  <data name="Negative_AddLocation" xml:space="preserve">
    <value>THIS SHOULD NEVER HAPPEN</value>
  </data>
  <data name="Negative_AddStolenProperty" xml:space="preserve">
    <value>Nothing was stolen.</value>
  </data>
  <data name="Negative_AddSuspects" xml:space="preserve">
    <value>I don't know anything about the suspects.</value>
  </data>
  <data name="Negative_AddVictims" xml:space="preserve">
    <value>THIS SHOULD NEVER HAPPEN</value>
  </data>
  <data name="Negative_AddWitnesses" xml:space="preserve">
    <value>I'm not aware of anybody who might have witnessed the burglary.</value>
  </data>
  <data name="Recommendation_AddDamagedProperty" xml:space="preserve">
    <value>Let's add details of any property that was damaged.</value>
  </data>
  <data name="Recommendation_AddForensicOpportunities" xml:space="preserve">
    <value>Let's think about forensic opportunities.</value>
  </data>
  <data name="Recommendation_AddInvolved" xml:space="preserve">
    <value>Were there any other people involved in this? Let's note down what we know.</value>
  </data>
  <data name="Recommendation_AddLocation" xml:space="preserve">
    <value>Let's record the address of the burglary.</value>
  </data>
  <data name="Recommendation_AddStolenProperty" xml:space="preserve">
    <value>Let's add details of any stolen property.</value>
  </data>
  <data name="Recommendation_AddSuspects" xml:space="preserve">
    <value>Let's record any information there is about suspects.</value>
  </data>
  <data name="Recommendation_AddVictims" xml:space="preserve">
    <value>Let's add details of the victims.</value>
  </data>
  <data name="Recommendation_AddWitnesses" xml:space="preserve">
    <value>Let's note down details of any potential witnesses.</value>
  </data>
  <data name="Recommendation_ReviewAllOptions" xml:space="preserve">
    <value>As the basics are in this report already, let's look at all your options.</value>
  </data>
  <data name="Reject_AddDamagedProperty" xml:space="preserve">
    <value>Not right now.</value>
  </data>
  <data name="Reject_AddForensicOpportunities" xml:space="preserve">
    <value>We can look into that later.</value>
  </data>
  <data name="Reject_AddInvolved" xml:space="preserve">
    <value>I'm not ready with details of any other involved people yet.</value>
  </data>
  <data name="Reject_AddLocation" xml:space="preserve">
    <value>I'll give you the location later.</value>
  </data>
  <data name="Reject_AddStolenProperty" xml:space="preserve">
    <value>We'll come back to that.</value>
  </data>
  <data name="Reject_AddSuspects" xml:space="preserve">
    <value>We can look into that later.</value>
  </data>
  <data name="Reject_AddVictims" xml:space="preserve">
    <value>Let's look at something else first.</value>
  </data>
  <data name="Reject_AddWitnesses" xml:space="preserve">
    <value>We'll come back to witnesses.</value>
  </data>
</root>